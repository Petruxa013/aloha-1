<?php

/**
 * sfGuardUserTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable
{
	/**
	 * Returns an instance of this class.
	 *
	 * @return object sfGuardUserTable
	 */
	public static function getInstance()
	{
		return Doctrine_Core::getTable('sfGuardUser');
	}

	public function getActiveCoordinators()
	{
		$q = $this->getCoordinatorsQuery();
		$q->addWhere('user.is_active = ?', true);

		return $q;
	}

	public function getCoordinatorsQuery()
	{
		$user = sfContext::getInstance()->getUser();

		$coordinatorGroup = sfGuardGroupTable::getInstance()->findOneByName('coordinator', Doctrine::HYDRATE_ARRAY);
		$q = $this->createQuery('user')
				->leftJoin('user.sfGuardUserGroup userGroup')
				->addWhere('userGroup.group_id = ?', $coordinatorGroup['id']);

		if($user->hasCredential('coordinator'))
		{
			$q->leftJoin('user.sfGuardUserSchema userSchema')
				->addWhere('userSchema.master_id = ?', $user->getId());
		}


		return $q;

	}

	public function getActiveProjectManagersQuery()
	{
		$q = $this->getProjectManagersQuery();
		$q->addWhere('user.is_active = ?', true);

		return $q;
	}

	public function getProjectManagersQuery()
	{
		$coordinatorGroup = sfGuardGroupTable::getInstance()->findOneByName('project_manager', Doctrine::HYDRATE_ARRAY);
		$q = $this->createQuery('user')
				->leftJoin('user.sfGuardUserGroup userGroup')
				->addWhere('userGroup.group_id = ?', $coordinatorGroup['id']);

		return $q;

	}

	public function findCoordinators()
	{
		return $this->getCoordinatorsQuery()->execute();
	}

	public function getActiveAuditorsQuery()
	{
		$q = $this->getAuditorsQuery();
		$q->addWhere('user.is_active = ?', true);

		return $q;
	}

	public function getAuditorsQuery()
	{
		$user = sfContext::getInstance()->getUser();

		$auditorGroup = sfGuardGroupTable::getInstance()->findOneByName('auditor', Doctrine::HYDRATE_ARRAY);
		$q = $this->createQuery('user')
				->leftJoin('user.sfGuardUserGroup userGroup')
				->addWhere('userGroup.group_id = ?', $auditorGroup['id']);

		if($user->hasCredential('coordinator'))
		{
			$q->leftJoin('user.sfGuardUserSchema userSchema')
				->addWhere('userSchema.master_id = ?', $user->getId());
		}

		return $q;

	}

}